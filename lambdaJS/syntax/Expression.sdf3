module Expression

imports
  
  Common
  Lexical
  Value

context-free syntax

	//Fig 1
	Exp.Identifier = < <ID> >
	Exp.Value = < <Val> >
	Exp.Let = < let ( <ID> = <Exp> ) <Exp> > {longest-match}
	Exp.App = < <Exp> ( <{Exp ","}*> ) > 
	Exp.Get = < <Exp> [ <Exp> ] >
	Exp.Instantiation = < <Exp> [ <Exp> ] = <Exp> >
	Exp.Delete = < delete <Exp> [ <Exp> ] >
	
	//Fig 2
	Exp.Assign = < <ID> = <Exp> >
	Exp.Ref = < ref <Exp> >
	Exp.Deref = < deref <Exp> >
